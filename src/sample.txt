 Laipvt功能详细介绍文档
 说明:
1. 最新的包地址为: https://private-deploy.oss-cn-beijing.aliyuncs.com/laipvt-test/private_all_pkg/laipvt.tar.gz
1. 默认安装更新方式为两种:
> 1. 一种是Rpa/Chatbot的: /usr/local/python-3.7.6/bin/pip3 install https://private-deploy.oss-cn-beijing.aliyuncs.com/laipvt-test/private_all_pkg/laipvt.tar.gz --upgrade<br/>1. `一种是最新的前置检查： `/dist/usr/local/bin/pip3 install https://private-deploy.oss-cn-beijing.aliyuncs.com/laipvt-test/private_all_pkg/laipvt.tar.gz --force --upgrade
1. 为了方便使用，在老版本中，可以使用  ln -vs /usr/local/python-3.7.6/bin/laipvt /usr/bin/laipvt，新版本的会自带链接
 私有部署包安装
 前提:
1. 需要通过前置检查
1. 安装部署包要确认
1. laipvt install -f /root/安装部署包地址.tar.gz
1. 其中安装有多种行为操作的。
 比如在安装完成后自动执行单元测试
1. `laipvt install -f /root/安装部署包地址.tar.gz --auto-test `
 指定安装的组件
1. 其中组件为软件包目录下的组件 可以通过 ls /解压包 来查看组件的名称
1. `laipvt install -f /root/安装部署包地址.tar.gz --services=ocr_core `
 进行并发的安装方式(不可靠。但是有用)
为了节省安装时间。可以采用并发安装的模式。但是前提是部署人员对部署有了解
并发安装无法保证可靠性。但是有效降低部署时间。需要对服务有一定的处理能力。
而且这样不能保证日志输出顺序正常
`laipvt install -f /root/安装部署包地址.tar.gz --optimize=true `
 安装完成后执行第三方工具安装
`laipvt install -f /root/安装部署包地址.tar.gz --third=jaeger,monitor `
 安装完成后执行自动调度
`  laipvt install -f /root/安装部署包地址.tar.gz --scheduled=true `
     需要前置检查为最新的precheck,并完整生成了调度文件
 RPA6.0 兼容性部署
 `  laipvt install -f /root/安装部署包地址.tar.gz --compatiable=true `
 私有部署环境删除
laipvt delete --all
取决于安装大小和io效率。一般在20分钟到1个小时左右
在此过程中会出现相应的错误的常用解决办法
> 1. 假如在kubeadm reset -f 卡住的话。建议机器重启后继续删除<br/> 备注： 需要在/usr/local/laipvt/check_result.yaml和日志文件中查看是哪几台服务器，不一定是当前部署的服务器<br/>1. 假如在 rm -rf /home/laiye(pkg_dir) 目录卡住的话,请耐心等待。因为文件很大,删除很久<br/>1. 假如出现服务器改动的时候或者出现相应的缺失check_result.yaml的时候可以配置输入前置检查的服务器配置后进行删除
 私有部署包升级
这边进行升级包有两个方法。
第一种方式是。后面接入的是新的包的地址
整包下载后执行 laipvt upgrade -f /root/testxxxx --services=entuc(指定升级的服务。不指定。升级所有的服务)
 第二种方式是。 在已有的包中删除要更新的包的目录并把新打的子包放进去
 laipvt upgrade -f /root/testxxxx --services=entuc(指定升级的服务。不指定。升级所有的服务)
    注意。升级操作会覆盖所有编辑的configmap。
 私有部署包测试
有些服务自带了单元测试集成
主要是mage_core 和 iap-cloud 以及entcmd和chatbot这四个模块。分别对应idp的测试包。wep的测试包。commander的测试包以及chatbot的测试脚本包。
laipvt apptest -f 部署包地址  --services=mage_core
 私有部署重置数据
      laipvt reset -f 部署包地址
      注意。此操作会删除所有中间件数据和数据库数据。并重新走服务初始化流程。请谨慎使用此功能
 查看（待实现）
 私有部署调度
    laipvt schedule apply -f 总下载包地址 -c 调度文件
    默认调度文件地址为 /usr/local/laipvt/scheduled.yaml.一般是新的前置检查软件通过。才会有这个文件生成。
    可以通过 vim /usr/local/laipvt/scheduled.yaml 来编辑调度信息。暂时不提更好的编辑方式
 中间件管理
 进行私有部署的中间件管理。单独可以指定其操作行为
       比如针对固定中间件的安装可以执行命令
       laipvt middleware install -f 总下载包地址 --action=install --middleware
       具体行为有
| 操作行为 | 含义 |                               示范命令                               |
|----------|------|----------------------------------------------------------------------|
| install  | 安装 | laipvt middleware --action=install -f -部署包地址 --middleware=mysql |
| delete   | 删除 | laipvt middleware --action=delete -f -部署包地址 --middleware=mysql  |
| reset    | 重置 | laipvt middleware --action=reset -f -部署包地址 --middleware=mysql   |
| upgrade  | 升级 | laipvt middleware --action=upgrade -f -部署包地址 --middleware=mysql |
 基础组件管理
     pass
 组件管理
    类似命令为:
      laipvt component -f /home/root/test652663455517507584-release --services=license --action=configmap
      组件管理功能比较常见。负责单个组件的某个生命周期的调用。主要常用的有重新渲染配置项(configmap)。重启服务(restart).其余操作添加